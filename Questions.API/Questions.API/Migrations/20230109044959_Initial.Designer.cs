// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Questions.API.Percistanse;

#nullable disable

namespace Questions.API.Migrations
{
    [DbContext(typeof(QuizDBContext))]
    [Migration("20230109044959_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("Questions.API.Models.Entities.Ans", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Answer")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCorrectAnswer")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a229f15f-8302-4465-90b8-5c2ff72c0895"),
                            Answer = "Maradona",
                            IsCorrectAnswer = false,
                            QuestionId = new Guid("d8a36fe1-35d2-49ef-b0f2-94922e14a885")
                        },
                        new
                        {
                            Id = new Guid("65111773-3cd7-4e03-8fed-29f7325bbff0"),
                            Answer = "Pele",
                            IsCorrectAnswer = false,
                            QuestionId = new Guid("d8a36fe1-35d2-49ef-b0f2-94922e14a885")
                        },
                        new
                        {
                            Id = new Guid("c5e9ff3e-e788-4ddf-bea8-f574060300aa"),
                            Answer = "Messi",
                            IsCorrectAnswer = true,
                            QuestionId = new Guid("d8a36fe1-35d2-49ef-b0f2-94922e14a885")
                        },
                        new
                        {
                            Id = new Guid("7605b90e-42bc-4221-961a-58c173d64d80"),
                            Answer = "Avatar",
                            IsCorrectAnswer = true,
                            QuestionId = new Guid("5bb1afca-a1a7-4cf8-8130-1926a935d95b")
                        },
                        new
                        {
                            Id = new Guid("4badef91-777f-4134-957b-6cddfc3c7b65"),
                            Answer = "Titanic",
                            IsCorrectAnswer = true,
                            QuestionId = new Guid("5bb1afca-a1a7-4cf8-8130-1926a935d95b")
                        },
                        new
                        {
                            Id = new Guid("44a4f422-54f5-4f60-860e-78b587d6056f"),
                            Answer = "Lionking",
                            IsCorrectAnswer = true,
                            QuestionId = new Guid("5bb1afca-a1a7-4cf8-8130-1926a935d95b")
                        });
                });

            modelBuilder.Entity("Questions.API.Models.Entities.Qn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .HasColumnType("TEXT");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Qns");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d8a36fe1-35d2-49ef-b0f2-94922e14a885"),
                            Category = "Sport",
                            Language = "Svenska",
                            Question = "Best forballplayer?"
                        },
                        new
                        {
                            Id = new Guid("5bb1afca-a1a7-4cf8-8130-1926a935d95b"),
                            Category = "Movies",
                            Language = "Eng",
                            Question = "Best movie?"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
