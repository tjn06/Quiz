// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Questions.API.Data;

#nullable disable

namespace Questions.API.Migrations
{
    [DbContext(typeof(NZWalksDBContext))]
    [Migration("20230102163755_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("Questions.API.Models.Domain.Ans", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCorrectAnswer")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("05d71be1-bdd7-47d5-8c2e-4dec11109f7d"),
                            Answer = "Maradona",
                            IsCorrectAnswer = false,
                            QuestionId = new Guid("3994d4a4-7114-41f2-b56d-5518c63dc327")
                        },
                        new
                        {
                            Id = new Guid("b937696b-fdee-4da6-b616-fd68da195ff0"),
                            Answer = "Pele",
                            IsCorrectAnswer = false,
                            QuestionId = new Guid("3994d4a4-7114-41f2-b56d-5518c63dc327")
                        },
                        new
                        {
                            Id = new Guid("95103e20-a1c6-42db-b29b-0645619c1908"),
                            Answer = "Messi",
                            IsCorrectAnswer = true,
                            QuestionId = new Guid("3994d4a4-7114-41f2-b56d-5518c63dc327")
                        },
                        new
                        {
                            Id = new Guid("a7a20f6a-0dd0-4160-9387-e9398fcff169"),
                            Answer = "Avatar",
                            IsCorrectAnswer = true,
                            QuestionId = new Guid("3b79e828-ab7a-44ee-8256-8539098a6e46")
                        },
                        new
                        {
                            Id = new Guid("0cfdae16-c2f2-45a7-825f-c90cdc5fe164"),
                            Answer = "Titanic",
                            IsCorrectAnswer = true,
                            QuestionId = new Guid("3b79e828-ab7a-44ee-8256-8539098a6e46")
                        },
                        new
                        {
                            Id = new Guid("7458d5f3-24e0-46b2-86ba-0b42332a497f"),
                            Answer = "Lionking",
                            IsCorrectAnswer = true,
                            QuestionId = new Guid("3b79e828-ab7a-44ee-8256-8539098a6e46")
                        });
                });

            modelBuilder.Entity("Questions.API.Models.Domain.Qn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Qns");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3994d4a4-7114-41f2-b56d-5518c63dc327"),
                            Category = "Sport",
                            Language = "Svenska",
                            Question = "Best forballplayer?"
                        },
                        new
                        {
                            Id = new Guid("3b79e828-ab7a-44ee-8256-8539098a6e46"),
                            Category = "Movies",
                            Language = "Eng",
                            Question = "Best movie?"
                        });
                });

            modelBuilder.Entity("Questions.API.Models.Domain.WalkDifficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WalkDifficulty");

                    b.HasData(
                        new
                        {
                            Id = new Guid("75c7f549-a546-48c2-8cc5-4ebd3dba5f1a"),
                            Code = "Code 1"
                        },
                        new
                        {
                            Id = new Guid("aa23131e-cc1b-4757-9843-7a6988abe365"),
                            Code = "Code 2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
