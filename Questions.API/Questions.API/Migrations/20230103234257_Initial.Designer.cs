// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Questions.API.Percistanse;

#nullable disable

namespace Questions.API.Migrations
{
    [DbContext(typeof(QuizDBContext))]
    [Migration("20230103234257_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("Questions.API.Models.Domain.Ans", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Answer")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCorrectAnswer")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4a424e1e-9c30-4b29-a4d9-5d7a55b8845c"),
                            Answer = "Maradona",
                            IsCorrectAnswer = false,
                            QuestionId = new Guid("a52d0157-1069-4f56-a5d5-372fcb10fa3a")
                        },
                        new
                        {
                            Id = new Guid("ed5487ea-3b4b-41a9-9166-ee6dee5f5672"),
                            Answer = "Pele",
                            IsCorrectAnswer = false,
                            QuestionId = new Guid("a52d0157-1069-4f56-a5d5-372fcb10fa3a")
                        },
                        new
                        {
                            Id = new Guid("576e5796-b434-431d-af29-0b905f0c6fe4"),
                            Answer = "Messi",
                            IsCorrectAnswer = true,
                            QuestionId = new Guid("a52d0157-1069-4f56-a5d5-372fcb10fa3a")
                        },
                        new
                        {
                            Id = new Guid("909d1c9e-1203-4f72-a10f-0bfb9bf6dd09"),
                            Answer = "Avatar",
                            IsCorrectAnswer = true,
                            QuestionId = new Guid("0f36ca1e-ec85-47e9-a44a-cfe925411db1")
                        },
                        new
                        {
                            Id = new Guid("1c3f178e-8fab-4d63-9cc8-f50438dd260c"),
                            Answer = "Titanic",
                            IsCorrectAnswer = true,
                            QuestionId = new Guid("0f36ca1e-ec85-47e9-a44a-cfe925411db1")
                        },
                        new
                        {
                            Id = new Guid("3d7ca991-6e2a-43b6-ae10-c0e37dc1c803"),
                            Answer = "Lionking",
                            IsCorrectAnswer = true,
                            QuestionId = new Guid("0f36ca1e-ec85-47e9-a44a-cfe925411db1")
                        });
                });

            modelBuilder.Entity("Questions.API.Models.Domain.Qn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Qns");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a52d0157-1069-4f56-a5d5-372fcb10fa3a"),
                            Category = "Sport",
                            Language = "Svenska",
                            Question = "Best forballplayer?"
                        },
                        new
                        {
                            Id = new Guid("0f36ca1e-ec85-47e9-a44a-cfe925411db1"),
                            Category = "Movies",
                            Language = "Eng",
                            Question = "Best movie?"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
